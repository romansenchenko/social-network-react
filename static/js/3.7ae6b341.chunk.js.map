{"version":3,"sources":["pages/Chat/ChatPage.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Chat","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","react_default","a","createElement","ChatPage_Messages","ChatPage_AddMessageForm","Messages","_ref","obj","TypeError","_objectDestructuringEmpty","messages","useSelector","state","chat","style","height","overflowY","map","m","index","ChatPage_Message","key","message","Message","_ref2","src","photo","width","userName","AddMessageForm","_useState","useState","_useState2","Object","slicedToArray","setMessage","_useState3","_useState4","status","onChange","e","currentTarget","value","onClick","sendMessage","ChatPage","ChatPage_Chat"],"mappings":"iJAgBMA,EAAW,WAEb,IAAMC,EAAWC,cASjB,OAPAC,oBAAU,WAEN,OADAF,EAASG,eACF,WACHH,EAASI,iBAEd,IAEIC,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACC,EAAD,MACAH,EAAAC,EAAAC,cAACE,EAAD,QAIFC,EAAoB,SAAAC,ICjCX,SAAAC,GACf,SAAAA,EAAA,UAAAC,UAAA,gCDgCoCC,CAAAH,GAChC,IAAMI,EAAWC,YAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,WAEjE,OAAOV,EAAAC,EAAAC,cAAA,OAAKY,MAAO,CAAEC,OAAQ,QAASC,UAAW,SAC5CN,EAASO,IAAI,SAACC,EAAGC,GAAJ,OAAcnB,EAAAC,EAAAC,cAACkB,EAAD,CAASC,IAAKF,EAAOG,QAASJ,QAI5DK,EAA4C,SAAAC,GAAiB,IAAdF,EAAcE,EAAdF,QAEjD,OAAOtB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,OAAKuB,IAAKH,EAAQI,MAAOZ,MAAO,CAAEa,MAAO,UADtC,IACmD3B,EAAAC,EAAAC,cAAA,SAAIoB,EAAQM,UAClE5B,EAAAC,EAAAC,cAAA,WACCoB,EAAQA,QACTtB,EAAAC,EAAAC,cAAA,aAIF2B,EAA0B,WAAM,IAAAC,EAEJC,mBAAS,IAFLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE3BR,EAF2BU,EAAA,GAElBG,EAFkBH,EAAA,GAAAI,EAGIL,mBAA8B,WAHlCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAI5BzC,GAJ4B0C,EAAA,GAAAA,EAAA,GAIjBzC,eAEFe,YAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKyB,SAW/D,OAAOtC,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAUqC,SAAU,SAACC,GAAD,OAAOL,EAAWK,EAAEC,cAAcC,QAAQA,MAAOpB,KAEzEtB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQyC,QAbW,WAClBrB,IAGL3B,EAASiD,YAAYtB,IACrBa,EAAW,OAQP,WAMGU,UArEM,WACjB,OAAO7C,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC4C,EAAD","file":"static/js/3.7ae6b341.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AnyAction } from 'redux';\r\nimport { ChatMessageType } from '../../api/chat-api';\r\nimport { sendMessage, startMessagesListening, stopMessagesListening } from '../../redux/chat-reducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\n\r\n\r\nconst ChatPage: FC = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat: FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening() as unknown as AnyAction)\r\n        return () => {\r\n            dispatch(stopMessagesListening() as unknown as AnyAction)\r\n        }\r\n    }, [])\r\n\r\n    return <div>\r\n        <Messages />\r\n        <AddMessageForm />\r\n    </div>\r\n}\r\n\r\nconst Messages: FC<{ }> = ({ }) => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    \r\n    return <div style={{ height: '600px', overflowY: 'auto' }}>\r\n        {messages.map((m, index) => <Message key={index} message={m} />)}\r\n    </div>\r\n}\r\n\r\nconst Message: FC<{ message: ChatMessageType }> = ({ message }) => {\r\n\r\n    return <div>\r\n        <img src={message.photo} style={{ width: '40px' }} /> <b>{message.userName}</b>\r\n        <br />\r\n        {message.message}\r\n        <hr />\r\n    </div>\r\n}\r\n\r\nconst AddMessageForm: FC<{ }> = () => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [readyStatus, setReadyStatud] = useState<'pending' | 'ready'>('pending')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message) as unknown as AnyAction)\r\n        setMessage('')\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n        </div>\r\n        <div>\r\n            <button onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ChatPage","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}